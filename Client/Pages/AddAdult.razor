@page "/AddAdult"
@using Client.Data
@using Client.Models

@inject IAdultData AdultData
@inject NavigationManager NavigationManager

<h3>AddAdult</h3>

<EditForm Model="@newAdult" OnValidSubmit="@AddNewAdult">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        First name:<br/> 
        <InputTextArea @bind-Value="newAdult.FirstName"/>
    </div>
    <div class="form-group">
        Last name:<br/> 
        <InputTextArea @bind-Value="newAdult.LastName"/>
    </div>
    <div class="form-group">
        Job:<br/>
        <InputTextArea @bind-Value="newJob.JobTitle"/>
    </div>
    <div class="form-group">
        Salary:<br/>
        <InputNumber @bind-Value="newJob.Salary"/>
    </div>
    <div class="form-group">
        Hair color:<br/> 
        <InputTextArea @bind-Value="newAdult.HairColor"/>
    </div>
    <div class="form-group">
         Eye color:<br/>
        <InputTextArea @bind-Value="newAdult.EyeColor"/>
    </div>
    <div class="form-group">
        Age:<br/> 
        <InputNumber @bind-Value="newAdult.Age"/>
    </div>
    
    <p class="actions">
        <button class="btn btn-outline-dark" type="submit">Create</button>
    </p>
</EditForm>

@code {
    private Adult newAdult = new Adult();
    private Job newJob = new Job();

    private void AddNewAdult()
    {
        newAdult.JobTitle = newJob;
        AdultData.AddAdultAsync(newAdult);
        NavigationManager.NavigateTo("/Adults");
    }
}